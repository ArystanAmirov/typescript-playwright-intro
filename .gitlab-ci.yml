stages:
  - test
  - upload_results

playwright_tests:
  stage: test
  image: mcr.microsoft.com/playwright:v1.49.0-noble
  script:
    - npm ci
    - npx playwright install chromium
    - npx playwright test
  artifacts:
    when: always
    paths:
      - test-results/junit-report.xml
      - playwright-report/
    expire_in: 4 days

upload_zephyr_results:
  stage: upload_results
  image: ubuntu:20.04
  dependencies:
    - playwright_tests
  before_script:
    - apt-get update && apt-get install -y curl grep
  script:
    - |
      if [ ! -f "test-results/junit-report.xml" ]; then
        echo "JUnit report not found!"
        exit 1
      fi

      cat test-results/junit-report.xml

      echo "Looking for test cases..."
      TEST_CASES=$(grep -oP '<testcase[^>]*name="\[TEST-T[0-9]+\][^"]*"' test-results/junit-report.xml)

      if [ -z "$TEST_CASES" ]; then
        echo "No test cases found with pattern [TEST-T*]"
        exit 0
      fi

      echo "$TEST_CASES" | while read -r line; do
        echo "Found line: $line"
        TEST_KEY=$(echo "$line" | grep -oP '(?<=TEST-)[A-Z0-9-]+')
        echo "TEST_KEY: $TEST_KEY"
        FULL_NAME=$(echo "$line" | grep -oP '(?<=")[^"]+')
        echo "FULL_NAME: $FULL_NAME"
        if grep -A 1 "<testcase[^>]*name=\"$FULL_NAME\"" test-results/junit-report.xml | grep -q "<failure"; then
          STATUS="Fail"
        else
          STATUS="Pass"
        fi
        echo "STATUS: $STATUS"
        EXECUTION_TIME=$(echo "$line" | grep -oP 'time="\d+\.\d+"' | grep -oP '\d+\.\d+' | awk '{print int($1 * 1000)}')
        if [ -z "$EXECUTION_TIME" ]; then
          echo "Failed to extract EXECUTION_TIME for $FULL_NAME"
          EXECUTION_TIME=0
        fi
        echo "EXECUTION_TIME: $EXECUTION_TIME"

        curl -s -X POST \
          -H "Authorization: Bearer $ZEPHYR_AUTH_TOKEN" \
          -H "Content-Type: application/json" \
          "https://api.zephyrscale.smartbear.com/v2/testexecutions" \
          -d "{
            \"projectKey\": \"TEST\",
            \"testCaseKey\": \"TEST-$TEST_KEY\",
            \"testCycleKey\": \"TEST-R4\",
            \"statusName\": \"$STATUS\",
            \"environmentName\": \"chromium\",
            \"actualEndDate\": \"2025-04-29T04:30:00Z\",
            \"executionTime\": $EXECUTION_TIME,
            \"comment\": \"Automated test executed via GitLab CI\"
          }"
      done