stages:
  - test
  - upload_results

playwright_tests:
  stage: test
  image: mcr.microsoft.com/playwright:v1.49.0-noble
  script:
    - npm ci
    - npx playwright install chromium
    - npx playwright test
  artifacts:
    when: always
    paths:
      - test-results/junit-report.xml
      - playwright-report/
    expire_in: 4 days

upload_zephyr_results:
  stage: upload_results
  image: ubuntu:20.04
  dependencies:
    - playwright_tests
  before_script:
    - apt-get update && apt-get install -y curl xmlstarlet bc
  script:
    - |
      if [ ! -f "test-results/junit-report.xml" ]; then
        echo "JUnit report not found!"
        exit 1
      fi

      echo "Parsing JUnit report..."
      xmlstarlet sel -t -m "//testcase[contains(@name, '[TEST-T')]" \
        -v "concat(substring-before(substring-after(@name, '[TEST-'), ']'), '|', \
        if (failure) then 'Fail' else 'Pass', '|', @time)" -n test-results/junit-report.xml > parsed_tests.txt

      if [ ! -s parsed_tests.txt ]; then
        echo "No test cases with [TEST-T*] found!"
        exit 0
      fi

      while IFS='|' read -r test_key status time; do
        if [ -z "$test_key" ]; then
          echo "Skipping empty test_key"
          continue
        fi
        echo "Test Key: TEST-$test_key"
        echo "Status: $status"
        execution_time=$(echo "$time * 1000" | bc | awk '{print int($1)}')
        if [ -z "$execution_time" ]; then
          echo "Failed to calculate execution_time for TEST-$test_key, setting to 0"
          execution_time=0
        fi
        echo "Execution Time: $execution_time ms"

        response=$(curl -s -w "%{http_code}" -X POST \
          -H "Authorization: Bearer $ZEPHYR_AUTH_TOKEN" \
          -H "Content-Type: application/json" \
          "https://api.zephyrscale.smartbear.com/v2/testexecutions" \
          -d "{
            \"projectKey\": \"TEST\",
            \"testCaseKey\": \"TEST-$test_key\",
            \"testCycleKey\": \"TEST-R4\",
            \"statusName\": \"$status\",
            \"environmentName\": \"chromium\",
            \"actualEndDate\": \"2025-04-29T10:04:07Z\",
            \"executionTime\": $execution_time,
            \"comment\": \"Automated test executed via GitLab CI\"
          }")
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        if [ "$http_code" -ne 201 ]; then
          echo "Failed to send test execution for TEST-$test_key. HTTP Code: $http_code, Response: $response_body"
          exit 1
        else
          echo "Successfully sent test execution for TEST-$test_key"
        fi
      done < parsed_tests.txt